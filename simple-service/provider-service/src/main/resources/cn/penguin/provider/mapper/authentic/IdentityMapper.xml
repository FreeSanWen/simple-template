<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.penguin.provider.mapper.authentic.IdentityMapper">

    <resultMap id="BaseResultMap" type="cn.penguin.provider.domain.dto.authentic.Identity">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="userId" column="user_id" jdbcType="BIGINT"/>
            <result property="roleId" column="role_id" jdbcType="BIGINT"/>
            <result property="isUsed" column="is_used" jdbcType="TINYINT"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,user_id,role_id,
        is_used,create_time
    </sql>

    <!-- ==================================常规方法开始================================== -->

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from sys_identity
        where  id = #{id,jdbcType=BIGINT} 
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from sys_identity
        where  id = #{id,jdbcType=BIGINT} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.penguin.provider.domain.dto.authentic.Identity" useGeneratedKeys="true">
        insert into sys_identity
        ( id,user_id,role_id
        ,is_used,create_time)
        values (#{id,jdbcType=BIGINT},#{userId,jdbcType=BIGINT},#{roleId,jdbcType=BIGINT}
        ,#{isUsed,jdbcType=TINYINT},#{createTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.penguin.provider.domain.dto.authentic.Identity" useGeneratedKeys="true">
        insert into sys_identity
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="userId != null">user_id,</if>
                <if test="roleId != null">role_id,</if>
                <if test="isUsed != null">is_used,</if>
                <if test="createTime != null">create_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=BIGINT},</if>
                <if test="userId != null">#{userId,jdbcType=BIGINT},</if>
                <if test="roleId != null">#{roleId,jdbcType=BIGINT},</if>
                <if test="isUsed != null">#{isUsed,jdbcType=TINYINT},</if>
                <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.penguin.provider.domain.dto.authentic.Identity">
        update sys_identity
        <set>
                <if test="userId != null">
                    user_id = #{userId,jdbcType=BIGINT},
                </if>
                <if test="roleId != null">
                    role_id = #{roleId,jdbcType=BIGINT},
                </if>
                <if test="isUsed != null">
                    is_used = #{isUsed,jdbcType=TINYINT},
                </if>
                <if test="createTime != null">
                    create_time = #{createTime,jdbcType=TIMESTAMP},
                </if>
        </set>
        where   id = #{id,jdbcType=BIGINT} 
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.penguin.provider.domain.dto.authentic.Identity">
        update sys_identity
        set 
            user_id =  #{userId,jdbcType=BIGINT},
            role_id =  #{roleId,jdbcType=BIGINT},
            is_used =  #{isUsed,jdbcType=TINYINT},
            create_time =  #{createTime,jdbcType=TIMESTAMP}
        where   id = #{id,jdbcType=BIGINT} 
    </update>

    <!-- ==================================常规方法结束================================== -->

</mapper>
