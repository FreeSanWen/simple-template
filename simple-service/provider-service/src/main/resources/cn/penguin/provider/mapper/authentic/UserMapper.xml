<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.penguin.provider.mapper.authentic.UserMapper">

    <resultMap type="cn.penguin.provider.entity.authentic.UserDTO" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="realName" column="real_name" jdbcType="VARCHAR"/>
        <result property="mobile" column="mobile" jdbcType="VARCHAR"/>
        <result property="isLocked" column="is_locked" jdbcType="INTEGER"/>
        <result property="isEnable" column="is_enable" jdbcType="INTEGER"/>
        <result property="isDelete" column="is_delete" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        t.id, t.username, t.password, t.real_name, t.mobile,t.is_locked, t.is_enable, t.is_delete, t.create_time, t.update_time
    </sql>

    <!-- =================================================常规方法开始================================================= -->

    <!--新增所有列-->
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.penguin.provider.entity.authentic.UserDTO" useGeneratedKeys="true">
        insert into sys_user
        ( id,username,password
        ,real_name,mobile,is_locked
        ,is_enable,is_delete,create_time
        ,update_time)
        values (#{id,jdbcType=BIGINT},#{username,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR}
               ,#{realName,jdbcType=VARCHAR},#{mobile,jdbcType=CHAR},#{isLocked,jdbcType=TINYINT}
               ,#{isEnable,jdbcType=TINYINT},#{isDelete,jdbcType=TINYINT},#{createTime,jdbcType=TIMESTAMP}
               ,#{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <!--新增非空列-->
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.penguin.provider.entity.authentic.UserDTO" useGeneratedKeys="true">
        insert into sys_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="username != null">username,</if>
            <if test="password != null">password,</if>
            <if test="realName != null">real_name,</if>
            <if test="mobile != null">mobile,</if>
            <if test="isLocked != null">is_locked,</if>
            <if test="isEnable != null">is_enable,</if>
            <if test="isDelete != null">is_delete,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id,jdbcType=BIGINT},</if>
            <if test="username != null">#{username,jdbcType=VARCHAR},</if>
            <if test="password != null">#{password,jdbcType=VARCHAR},</if>
            <if test="realName != null">#{realName,jdbcType=VARCHAR},</if>
            <if test="mobile != null">#{mobile,jdbcType=CHAR},</if>
            <if test="isLocked != null">#{isLocked,jdbcType=TINYINT},</if>
            <if test="isEnable != null">#{isEnable,jdbcType=TINYINT},</if>
            <if test="isDelete != null">#{isDelete,jdbcType=TINYINT},</if>
            <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
            <if test="updateTime != null">#{updateTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>

    <!-- 批量插入 -->
    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into sys_user
        ( id,username,password
        ,real_name,mobile,is_locked
        ,is_enable,is_delete,create_time
        ,update_time)
        values
        <foreach collection="list" item="entity" separator=",">
            (#{entity.id,jdbcType=BIGINT},#{entity.username,jdbcType=VARCHAR},#{entity.password,jdbcType=VARCHAR}
            ,#{entity.realName,jdbcType=VARCHAR},#{entity.mobile,jdbcType=CHAR},#{entity.isLocked,jdbcType=TINYINT}
            ,#{entity.isEnable,jdbcType=TINYINT},#{entity.isDelete,jdbcType=TINYINT},#{entity.createTime,jdbcType=TIMESTAMP}
            ,#{entity.updateTime,jdbcType=TIMESTAMP})
        </foreach>
    </insert>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from sys_user
        where id = #{id}
    </delete>

    <!--通过主键更新所有字段-->
    <update id="updateById">
        update sys_user
        <set>
            username = #{username},
            password = #{password},
            real_name = #{realName},
            mobile = #{mobile},
            is_locked = #{isLocked},
            is_enable = #{isEnable},
            is_delete = #{isDelete},
            create_time = #{createTime},
            update_time = #{updateTime}
        </set>
        where id = #{id}
    </update>

    <!--通过主键修改数据-->
    <update id="updateSelectiveById">
        update sys_user
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="realName != null and realName != ''">
                real_name = #{realName},
            </if>
            <if test="mobile != null and mobile != ''">
                mobile = #{mobile},
            </if>
            <if test="isLocked != null ">
                is_locked = #{isLocked},
            </if>
            <if test="isEnable != null ">
                is_enable = #{isEnable},
            </if>
            <if test="isDelete != null ">
                is_delete = #{isDelete},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键修改数据-->
    <select id="selectById" resultMap="UserMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user t
        where id = #{id}
    </select>

    <!--查询单个-->
    <select id="selectOne" resultMap="UserMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user t
        <include refid="Base_Condition_Sql"/>
        limit 1
    </select>

    <!--查询多行数据-->
    <select id="selectList" resultMap="UserMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user t
        <include refid="Base_Condition_Sql"/>
    </select>

    <!-- 查询条件 -->
    <sql id="Base_Condition_Sql">
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="realName != null and realName != ''">
                and real_name like concat('%',#{realName},'%')
            </if>
            <if test="mobile != null and mobile != ''">
                and mobile = #{mobile}
            </if>
            <if test="isEnable != null ">
                and is_enable = #{isEnable}
            </if>
            <if test="isDelete != null ">
                and is_delete = #{isDelete}
            </if>
        </where>
    </sql>

    <!-- =================================================常规方法结束================================================= -->
</mapper>