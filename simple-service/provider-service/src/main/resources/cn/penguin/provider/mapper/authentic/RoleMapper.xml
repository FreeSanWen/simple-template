<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.penguin.provider.mapper.authentic.RoleMapper">

    <resultMap id="BaseResultMap" type="cn.penguin.provider.domain.dto.authentic.Role">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="roleCode" column="role_code" jdbcType="VARCHAR"/>
            <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
            <result property="isEnable" column="is_enable" jdbcType="TINYINT"/>
            <result property="isDelete" column="is_delete" jdbcType="TINYINT"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,role_code,role_name,
        is_enable,is_delete,create_time
    </sql>

    <!-- ==================================常规方法开始================================== -->

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from sys_role
        where  id = #{id,jdbcType=BIGINT} 
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from sys_role
        where  id = #{id,jdbcType=BIGINT} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.penguin.provider.domain.dto.authentic.Role" useGeneratedKeys="true">
        insert into sys_role
        ( id,role_code,role_name
        ,is_enable,is_delete,create_time
        )
        values (#{id,jdbcType=BIGINT},#{roleCode,jdbcType=VARCHAR},#{roleName,jdbcType=VARCHAR}
        ,#{isEnable,jdbcType=TINYINT},#{isDelete,jdbcType=TINYINT},#{createTime,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.penguin.provider.domain.dto.authentic.Role" useGeneratedKeys="true">
        insert into sys_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="roleCode != null">role_code,</if>
                <if test="roleName != null">role_name,</if>
                <if test="isEnable != null">is_enable,</if>
                <if test="isDelete != null">is_delete,</if>
                <if test="createTime != null">create_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=BIGINT},</if>
                <if test="roleCode != null">#{roleCode,jdbcType=VARCHAR},</if>
                <if test="roleName != null">#{roleName,jdbcType=VARCHAR},</if>
                <if test="isEnable != null">#{isEnable,jdbcType=TINYINT},</if>
                <if test="isDelete != null">#{isDelete,jdbcType=TINYINT},</if>
                <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.penguin.provider.domain.dto.authentic.Role">
        update sys_role
        <set>
                <if test="roleCode != null">
                    role_code = #{roleCode,jdbcType=VARCHAR},
                </if>
                <if test="roleName != null">
                    role_name = #{roleName,jdbcType=VARCHAR},
                </if>
                <if test="isEnable != null">
                    is_enable = #{isEnable,jdbcType=TINYINT},
                </if>
                <if test="isDelete != null">
                    is_delete = #{isDelete,jdbcType=TINYINT},
                </if>
                <if test="createTime != null">
                    create_time = #{createTime,jdbcType=TIMESTAMP},
                </if>
        </set>
        where   id = #{id,jdbcType=BIGINT} 
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.penguin.provider.domain.dto.authentic.Role">
        update sys_role
        set 
            role_code =  #{roleCode,jdbcType=VARCHAR},
            role_name =  #{roleName,jdbcType=VARCHAR},
            is_enable =  #{isEnable,jdbcType=TINYINT},
            is_delete =  #{isDelete,jdbcType=TINYINT},
            create_time =  #{createTime,jdbcType=TIMESTAMP}
        where   id = #{id,jdbcType=BIGINT} 
    </update>

    <!-- ==================================常规方法结束================================== -->

</mapper>
